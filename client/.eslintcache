[{"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/index.js":"1","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/App.js":"2","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/reportWebVitals.js":"3","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/CallPage/CallPage.js":"4","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/HomePage/HomePage.js":"5","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/NoMatch/NoMatch.js":"6","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/CallPageHeader/CallPageHeader.js":"7","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/CallPageFooter/CallPageFooter.js":"8","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/MeetingInfo/MeetingInfo.js":"9","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/Messenger/Messenger.js":"10","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/Header/Header.js":"11","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/Alert/Alert.js":"12","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/reducers/MessageListReducer.js":"13","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/utils/apiEndpoints.js":"14","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/utils/apiRequests.js":"15","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/utils/helpers.js":"16"},{"size":500,"mtime":1675558147449,"results":"17","hashOfConfig":"18"},{"size":582,"mtime":1675558092142,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1675548308113,"results":"20","hashOfConfig":"18"},{"size":6284,"mtime":1675557511453,"results":"21","hashOfConfig":"18"},{"size":1887,"mtime":1675557561566,"results":"22","hashOfConfig":"18"},{"size":482,"mtime":1675557590508,"results":"23","hashOfConfig":"18"},{"size":1452,"mtime":1675557703032,"results":"24","hashOfConfig":"18"},{"size":1943,"mtime":1675557675246,"results":"25","hashOfConfig":"18"},{"size":1407,"mtime":1675557756331,"results":"26","hashOfConfig":"18"},{"size":2058,"mtime":1675557804311,"results":"27","hashOfConfig":"18"},{"size":798,"mtime":1675557728258,"results":"28","hashOfConfig":"18"},{"size":511,"mtime":1675557644813,"results":"29","hashOfConfig":"18"},{"size":249,"mtime":1675557969665,"results":"30","hashOfConfig":"18"},{"size":152,"mtime":1675558013895,"results":"31","hashOfConfig":"18"},{"size":829,"mtime":1675558032490,"results":"32","hashOfConfig":"18"},{"size":121,"mtime":1675558051732,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tcc1mj",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/index.js",[],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/App.js",[],["71","72"],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/reportWebVitals.js",[],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/CallPage/CallPage.js",["73","74"],"import { useEffect, useReducer, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getRequest, postRequest } from \"./../../utils/apiRequests\";\nimport {\n  BASE_URL,\n  GET_CALL_ID,\n  SAVE_CALL_ID,\n} from \"./../../utils/apiEndpoints\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport \"./CallPage.scss\";\nimport Messenger from \"./../UI/Messenger/Messenger\";\nimport MessageListReducer from \"../../reducers/MessageListReducer\";\nimport Alert from \"../UI/Alert/Alert\";\nimport MeetingInfo from \"../UI/MeetingInfo/MeetingInfo\";\nimport CallPageFooter from \"../UI/CallPageFooter/CallPageFooter\";\nimport CallPageHeader from \"../UI/CallPageHeader/CallPageHeader\";\n\nlet peer = null;\nconst socket = io.connect(process.env.REACT_APP_BASE_URL);\nconst initialState = [];\n\nconst CallPage = () => {\n  const history = useHistory();\n  let { id } = useParams();\n  const isAdmin = window.location.hash == \"#init\" ? true : false;\n  const url = `${window.location.origin}${window.location.pathname}`;\n  let alertTimeout = null;\n\n  const [messageList, messageListReducer] = useReducer(\n    MessageListReducer,\n    initialState\n  );\n\n  const [streamObj, setStreamObj] = useState();\n  const [screenCastStream, setScreenCastStream] = useState();\n  const [meetInfoPopup, setMeetInfoPopup] = useState(false);\n  const [isPresenting, setIsPresenting] = useState(false);\n  const [isMessenger, setIsMessenger] = useState(false);\n  const [messageAlert, setMessageAlert] = useState({});\n  const [isAudio, setIsAudio] = useState(true);\n\n  useEffect(() => {\n    if (isAdmin) {\n      setMeetInfoPopup(true);\n    }\n    initWebRTC();\n    socket.on(\"code\", (data) => {\n      if (data.url === url) {\n        peer.signal(data.code);\n      }\n    });\n  }, []);\n\n  const getRecieverCode = async () => {\n    const response = await getRequest(`${BASE_URL}${GET_CALL_ID}/${id}`);\n    if (response.code) {\n      peer.signal(response.code);\n    }\n  };\n\n  const initWebRTC = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true,\n      })\n      .then((stream) => {\n        setStreamObj(stream);\n        console.log(\"Got MediaStream:\", stream);\n\n        peer = new Peer({\n          initiator: isAdmin,\n          trickle: false,\n          stream: stream,\n        });\n\n        if (!isAdmin) {\n          getRecieverCode();\n        }\n\n        peer.on(\"signal\", async (data) => {\n          if (isAdmin) {\n            let payload = {\n              id,\n              signalData: data,\n            };\n            await postRequest(`${BASE_URL}${SAVE_CALL_ID}`, payload);\n          } else {\n            socket.emit(\"code\", { code: data, url }, (cbData) => {\n              console.log(\"code sent\");\n            });\n          }\n        });\n\n        peer.on(\"connect\", () => {\n          // wait for 'connect' event before using the data channel\n        });\n\n        peer.on(\"data\", (data) => {\n          clearTimeout(alertTimeout);\n          messageListReducer({\n            type: \"addMessage\",\n            payload: {\n              user: \"other\",\n              msg: data.toString(),\n              time: Date.now(),\n            },\n          });\n\n          setMessageAlert({\n            alert: true,\n            isPopup: true,\n            payload: {\n              user: \"other\",\n              msg: data.toString(),\n            },\n          });\n\n          alertTimeout = setTimeout(() => {\n            setMessageAlert({\n              ...messageAlert,\n              isPopup: false,\n              payload: {},\n            });\n          }, 10000);\n        });\n\n        peer.on(\"stream\", (stream) => {\n          // got remote video stream, now let's show it in a video tag\n          let video = document.querySelector(\"video\");\n\n          if (\"srcObject\" in video) {\n            video.srcObject = stream;\n          } else {\n            video.src = window.URL.createObjectURL(stream); // for older browsers\n          }\n\n          video.play();\n        });\n      })\n      .catch(() => {});\n  };\n\n  const sendMsg = (msg) => {\n    peer.send(msg);\n    messageListReducer({\n      type: \"addMessage\",\n      payload: {\n        user: \"you\",\n        msg: msg,\n        time: Date.now(),\n      },\n    });\n  };\n\n  const screenShare = () => {\n    navigator.mediaDevices\n      .getDisplayMedia({ cursor: true })\n      .then((screenStream) => {\n        peer.replaceTrack(\n          streamObj.getVideoTracks()[0],\n          screenStream.getVideoTracks()[0],\n          streamObj\n        );\n        setScreenCastStream(screenStream);\n        screenStream.getTracks()[0].onended = () => {\n          peer.replaceTrack(\n            screenStream.getVideoTracks()[0],\n            streamObj.getVideoTracks()[0],\n            streamObj\n          );\n        };\n        setIsPresenting(true);\n      });\n  };\n\n  const stopScreenShare = () => {\n    screenCastStream.getVideoTracks().forEach(function (track) {\n      track.stop();\n    });\n    peer.replaceTrack(\n      screenCastStream.getVideoTracks()[0],\n      streamObj.getVideoTracks()[0],\n      streamObj\n    );\n    setIsPresenting(false);\n  };\n\n  const toggleAudio = (value) => {\n    streamObj.getAudioTracks()[0].enabled = value;\n    setIsAudio(value);\n  };\n\n  const disconnectCall = () => {\n    peer.destroy();\n    history.push(\"/\");\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"callpage-container\">\n      <video className=\"video-container\" src=\"\" controls></video>\n\n      <CallPageHeader\n        isMessenger={isMessenger}\n        setIsMessenger={setIsMessenger}\n        messageAlert={messageAlert}\n        setMessageAlert={setMessageAlert}\n      />\n      <CallPageFooter\n        isPresenting={isPresenting}\n        stopScreenShare={stopScreenShare}\n        screenShare={screenShare}\n        isAudio={isAudio}\n        toggleAudio={toggleAudio}\n        disconnectCall={disconnectCall}\n      />\n\n      {isAdmin && meetInfoPopup && (\n        <MeetingInfo setMeetInfoPopup={setMeetInfoPopup} url={url} />\n      )}\n      {isMessenger ? (\n        <Messenger\n          setIsMessenger={setIsMessenger}\n          sendMsg={sendMsg}\n          messageList={messageList}\n        />\n      ) : (\n        messageAlert.isPopup && <Alert messageAlert={messageAlert} />\n      )}\n    </div>\n  );\n};\nexport default CallPage;\n","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/HomePage/HomePage.js",["75","76"],"import { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVideo, faKeyboard } from \"@fortawesome/free-solid-svg-icons\";\nimport shortid from \"shortid\";\nimport \"./HomePage.scss\";\nimport Header from \"../UI/Header/Header\";\n\nconst HomePage = () => {\n  const history = useHistory();\n\n  const startCall = () => {\n    const uid = shortid.generate();\n    history.push(`/${uid}#init`);\n  };\n\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"body\">\n        <div className=\"left-side\">\n          <div className=\"content\">\n            <h2>Premium video meetings. Now free for everyone.</h2>\n            <p>\n              We re-engineered the service we built for secure business\n              meetings, Google Meet, to make it free and available for all.\n            </p>\n            <div className=\"action-btn\">\n              <button className=\"btn green\" onClick={startCall}>\n                <FontAwesomeIcon className=\"icon-block\" icon={faVideo} />\n                New Meeting\n              </button>\n              <div className=\"input-block\">\n                <div className=\"input-section\">\n                  <FontAwesomeIcon className=\"icon-block\" icon={faKeyboard} />\n                  <input placeholder=\"Enter a code or link\" />\n                </div>\n                <button className=\"btn no-bg\">Join</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"help-text\">\n            <a href=\"\">Learn more</a> about Google Meet\n          </div>\n        </div>\n        <div className=\"right-side\">\n          <div className=\"content\">\n            <img src=\"https://www.gstatic.com/meet/google_meet_marketing_ongoing_meeting_grid_427cbb32d746b1d0133b898b50115e96.jpg\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default HomePage;\n","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/NoMatch/NoMatch.js",[],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/CallPageHeader/CallPageHeader.js",["77"],"import { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUserFriends,\n  faCommentAlt,\n  faUserCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./CallPageHeader.scss\";\nimport { formatDate } from \"./../../../utils/helpers\";\n\nconst CallPageHeader = ({\n  isMessenger,\n  setIsMessenger,\n  messageAlert,\n  setMessageAlert,\n}) => {\n  let interval = null;\n  const [currentTime, setCurrentTime] = useState(() => {\n    return formatDate();\n  });\n\n  useEffect(() => {\n    interval = setInterval(() => setCurrentTime(formatDate()), 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div className=\"frame-header\">\n      <div className=\"header-items icon-block\">\n        <FontAwesomeIcon className=\"icon\" icon={faUserFriends} />\n      </div>\n      <div\n        className=\"header-items icon-block\"\n        onClick={() => {\n          setIsMessenger(true);\n          setMessageAlert({});\n        }}\n      >\n        <FontAwesomeIcon className=\"icon\" icon={faCommentAlt} />\n        {!isMessenger && messageAlert.alert && (\n          <span className=\"alert-circle-icon\"></span>\n        )}\n      </div>\n      <div className=\"header-items date-block\">{currentTime}</div>\n      <div className=\"header-items icon-block\">\n        <FontAwesomeIcon className=\"icon profile\" icon={faUserCircle} />\n      </div>\n    </div>\n  );\n};\n\nexport default CallPageHeader;\n","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/CallPageFooter/CallPageFooter.js",[],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/MeetingInfo/MeetingInfo.js",[],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/Messenger/Messenger.js",[],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/Header/Header.js",["78"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faQuestionCircle,\n  faExclamationCircle,\n  faCog,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./Header.scss\";\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"logo\">\n        <img src=\"https://www.gstatic.com/meet/google_meet_horizontal_wordmark_2020q4_2x_icon_124_40_292e71bcb52a56e2a9005164118f183b.png\" />\n        <span className=\"help-text\">Meet</span>\n      </div>\n      <div className=\"action-btn\">\n        <FontAwesomeIcon className=\"icon-block\" icon={faQuestionCircle} />\n        <FontAwesomeIcon className=\"icon-block\" icon={faExclamationCircle} />\n        <FontAwesomeIcon className=\"icon-block\" icon={faCog} />\n      </div>\n    </div>\n  );\n};\nexport default Header;\n","/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/components/UI/Alert/Alert.js",[],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/reducers/MessageListReducer.js",[],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/utils/apiEndpoints.js",[],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/utils/apiRequests.js",[],"/Users/parthranawat/Library/CloudStorage/OneDrive-VirginiaTech/Laptop/Parth/Programs/hackviolet-23/client/src/utils/helpers.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":26,"column":40,"nodeType":"85","messageId":"86","endLine":26,"endColumn":42},{"ruleId":"87","severity":1,"message":"88","line":53,"column":6,"nodeType":"89","endLine":53,"endColumn":8,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":42,"column":13,"nodeType":"93","endLine":42,"endColumn":24},{"ruleId":"94","severity":1,"message":"95","line":47,"column":13,"nodeType":"93","endLine":47,"endColumn":135},{"ruleId":"87","severity":1,"message":"96","line":23,"column":16,"nodeType":"97","endLine":23,"endColumn":69},{"ruleId":"94","severity":1,"message":"95","line":13,"column":9,"nodeType":"93","endLine":13,"endColumn":142},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initWebRTC', 'isAdmin', and 'url'. Either include them or remove the dependency array.","ArrayExpression",["100"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Assignments to the 'interval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [initWebRTC, isAdmin, url]",{"range":"103","text":"104"},[1772,1774],"[initWebRTC, isAdmin, url]"]